// Generated by view binder compiler. Do not edit!
package com.surround.bluetoothsystem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.surround.bluetoothsystem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBluetoothDeviceBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button connectButton;

  @NonNull
  public final TextView deviceAddress;

  @NonNull
  public final ImageView deviceIcon;

  @NonNull
  public final TextView deviceName;

  @NonNull
  public final TextView deviceRssi;

  private ItemBluetoothDeviceBinding(@NonNull CardView rootView, @NonNull Button connectButton,
      @NonNull TextView deviceAddress, @NonNull ImageView deviceIcon, @NonNull TextView deviceName,
      @NonNull TextView deviceRssi) {
    this.rootView = rootView;
    this.connectButton = connectButton;
    this.deviceAddress = deviceAddress;
    this.deviceIcon = deviceIcon;
    this.deviceName = deviceName;
    this.deviceRssi = deviceRssi;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBluetoothDeviceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBluetoothDeviceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_bluetooth_device, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBluetoothDeviceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.connectButton;
      Button connectButton = ViewBindings.findChildViewById(rootView, id);
      if (connectButton == null) {
        break missingId;
      }

      id = R.id.deviceAddress;
      TextView deviceAddress = ViewBindings.findChildViewById(rootView, id);
      if (deviceAddress == null) {
        break missingId;
      }

      id = R.id.deviceIcon;
      ImageView deviceIcon = ViewBindings.findChildViewById(rootView, id);
      if (deviceIcon == null) {
        break missingId;
      }

      id = R.id.deviceName;
      TextView deviceName = ViewBindings.findChildViewById(rootView, id);
      if (deviceName == null) {
        break missingId;
      }

      id = R.id.deviceRssi;
      TextView deviceRssi = ViewBindings.findChildViewById(rootView, id);
      if (deviceRssi == null) {
        break missingId;
      }

      return new ItemBluetoothDeviceBinding((CardView) rootView, connectButton, deviceAddress,
          deviceIcon, deviceName, deviceRssi);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
